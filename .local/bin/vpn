#!/bin/bash
set -o errexit
set -o nounset
[[ -v DEBUG ]] && set -o xtrace

# manage multiple openvpn connections

function main() {
  local command=${1-'help'}
  case $command in
    # handle special commands first
    list) list ;;
    clear) clear ;;
    help) usage ;;
    # forward others to systemctl
    *) delegate "$@" ;;
  esac
}

function usage() {
  echo "$0 <command> [<environment>]"
  echo "  list - list status of vpn environments"
  echo "  clear - stop all vpn connections"
  echo "  help - show this message"
  echo "  <command> - call command on vpn service"
}

function list() {
  for config_file in $(ls /etc/openvpn/*.conf); do
    # expect <env>.conf naming convention - same as systemd
    env=$(basename $config_file | cut -d'.' -f1)
    echo "$env - $(systemctl is-active openvpn@$env)"
  done
  for config_file in $(ls /etc/openfortivpn/*.conf); do
    # expect <env>.conf naming convention - same as systemd
    env=$(basename $config_file | cut -d'.' -f1)
    echo "$env - $(systemctl is-active openfortivpn@$env)"
  done
}

function clear() {
  elevate
  sudo systemctl stop openvpn@*
  sudo systemctl stop openfortivpn@*
  list
}

function delegate() {
  elevate
  local command=${1?"missing command: $0 <command> <environment>"}
  local env=${2?"missing environment: $0 <command> <environment>"}
  if [[ -f "/etc/openvpn/$env.conf" ]]; then
    sudo systemctl "$command" openvpn@"$env"
  elif [[ -f "/etc/openfortivpn/$env.conf" ]]; then
    sudo systemctl "$command" openfortivpn@"$env"
  else
    echo "cannot find $env.conf"
    exit 1
  fi
}

function elevate() {
  if [[ ! $(sudo echo 0) ]]; then exit 1; fi
}

main "$@"
